/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ane' at '11/14/16 6:22 PM' with Gradle 3.2
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2/userguide/scala_plugin.html
 */

// Apply the scala plugin to add support for Scala
apply plugin: 'scala'
apply plugin: 'application'


mainClassName = "observatory.Main"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // We use Scala 2.11 in our library project
    compile 'org.scala-lang:scala-library:2.11.8'
    compile 'com.typesafe.akka:akka-actor_2.11:2.4.12'
    compile 'com.typesafe.akka:akka-camel_2.11:2.4.12'
    compile 'com.typesafe.akka:akka-http-core_2.11:2.4.11'
    compile 'com.typesafe.akka:akka-http-experimental_2.11:2.4.11'
    compile 'com.typesafe.akka:akka-http-spray-json-experimental_2.11:2.4.11'
    compile 'com.typesafe.akka:akka-http-testkit_2.11:2.4.11'

    // We use Scalatest for testing our library
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.0'
    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.0.6'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
